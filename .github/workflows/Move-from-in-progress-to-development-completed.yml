name: Move card from In Progess to Development Completed

on:
    project_card:
        types: [moved]
        
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Check move from "IN PROGRESS" to "DEVELOPMENT COMPLETED"
              id: check
              uses: chandrakiran-dev/sfdx-actions/project_card-check-movement@master
              with:
                  token: ${{ secrets.GITHUB_TOKEN}}
                  fromColumnId: ${{ github.event.changes.column_id.from }}
                  fromColumnName: IN PROGRESS
                  toColumnId: ${{ github.event.project_card.column_id }}
                  toColumnName: DEVELOPMENT COMPLETED
            - name: Check out the source code
              uses: actions/checkout@v1
              if: steps.check.outputs.isMatch == 'true'
            - name: Get issue number
              id: get_issue_number
              if: steps.check.outputs.isMatch == 'true'
              shell: bash
              run: |
                  value=$(node scripts/extract-issue-number.js ${{ github.event.project_card.content_url }})
                  echo "::set-output name=ticket_number::$value"
            - name: Get branch name
              if: steps.check.outputs.isMatch == 'true'
              id: get_branch_name
              uses: chandrakiran-dev/sfdx-actions/get-branch-name@master
              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
                ISSUE_NUMBER: ${{ steps.get_issue_number.outputs.ticket_number }}
                PROJECT_PREFIX: ${{ secrets.PROJECT_NAME }}
            - name: Check pull request exist
              if: steps.check.outputs.isMatch == 'true'
              id: pull_exist
              uses: chandrakiran-dev/sfdx-actions/check-pull-request-exist@master
              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
                ISSUE_NUMBER: ${{ steps.get_issue_number.outputs.ticket_number }}
                PROJECT_PREFIX: ${{ secrets.PROJECT_NAME }}
            - name: Check Function label exist
              if: steps.check.outputs.isMatch == 'true'
              id: is_functional
              uses: chandrakiran-dev/sfdx-actions/check-label-exist-on-issue@master
              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
                ISSUE_NUMBER: ${{ steps.get_issue_number.outputs.ticket_number }}
                LABEL: 'Functional'
            - name: Switch brench to feature
              if: steps.check.outputs.isMatch == 'true' && steps.pull_exist.outputs.IS_EXIST == 'false' && steps.is_functional.outputs.IS_EXIST == 'false'
              shell: bash
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git checkout ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
            - name: Create a PR
              uses: chandrakiran-dev/sfdx-actions/pulls-create-pr@master
              if: steps.check.outputs.isMatch == 'true' && steps.pull_exist.outputs.IS_EXIST == 'false' && steps.is_functional.outputs.IS_EXIST == 'false'
              with:
                  token: ${{ secrets.GITHUB_TOKEN}}
                  owner: ${{ github.event.repository.owner.login }}
                  repo: ${{ github.event.repository.name }}
                  title: ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
                  body: ${{ format('Changes from \#{0}', steps.get_branch_name.outputs.BRANCH_NAME)}}
                  head: ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
                  base: master
            - name: Get Github User Info
              id: firebase_token
              uses: chandrakiran-dev/sfdx-actions/firebase-actions@master
              if: steps.check.outputs.isMatch == 'true' && steps.is_functional.outputs.IS_EXIST == 'true'
              with:
                FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL}}
                FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
            - name: Stash credentials for later
              id: stash_credentials
              if: steps.check.outputs.isMatch == 'true' && steps.is_functional.outputs.IS_EXIST == 'true'
              shell: bash
              run: |
                  value=$(node scripts/extract-issue-number.js ${{ github.event.project_card.content_url }})
                  echo "::set-output name=ticket_number::$value"
                  mkdir .github_actions
                  touch .github_actions/.SFDX_URL_STORE.txt
                  curl https://salesforce-orgs-default-rtdb.firebaseio.com/${{ secrets.PROJECT_NAME }}-$value.json?access_token=${{ steps.firebase_token.outputs.ACCESS_TOKEN }} -o .github_actions/.SFDX_URL_STORE.txt
            - name: Console.log 2
              if: steps.check.outputs.isMatch == 'true'
              shell: bash
              run: |
                  value=`cat .github_actions/.SFDX_URL_STORE.txt`
                  echo "$value"
            - name: Authenticate against scratch org
              uses: forcedotcom/salesforcedx-actions@master
              if: steps.check.outputs.isMatch == 'true' && steps.is_functional.outputs.IS_EXIST == 'true'
              with:
                  args: force:auth:sfdxurl:store --sfdxurlfile=.github_actions/.SFDX_URL_STORE.txt --setalias=scratch-org
            - name: Retrieve metadata changes
              uses: forcedotcom/salesforcedx-actions@master
              if: steps.check.outputs.isMatch == 'true' && steps.is_functional.outputs.IS_EXIST == 'true'
              with:
                  args: force:source:retrieve --manifest=manifest/package.xml --targetusername=scratch-org
            - name: Commit Git changes
              if: steps.check.outputs.isMatch == 'true' && steps.is_functional.outputs.IS_EXIST == 'true'
              shell: bash
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git checkout ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
                  git add -A
                  git commit -m "Add new changes from scratch org"
            - name: Push changes
              uses: vazexqi/github-push-action@master
              if: steps.check.outputs.isMatch == 'true' && steps.is_functional.outputs.IS_EXIST == 'true'
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  branch: ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
                  force: true
            - name: Create a PR
              uses: vazexqi/salesforcedx-kanban-actions/pulls-create-pr@master
              if: steps.check.outputs.isMatch == 'true' && steps.is_functional.outputs.IS_EXIST == 'true'
              with:
                  token: ${{ secrets.GITHUB_TOKEN}}
                  owner: ${{ github.event.repository.owner.login }}
                  repo: ${{ github.event.repository.name }}
                  title: ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
                  body: ${{ format('Changes from \#{0}', steps.get_branch_name.outputs.BRANCH_NAME)}}
                  head: ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
                  base: master
            - name: Console.log
              if: steps.check.outputs.isMatch == 'true'
              run: echo Hello, world! ${{ steps.pull_exist.outputs.IS_EXIST }} and ${{ steps.is_functional.outputs.IS_EXIST }} ${{ steps.get_branch_name.outputs.BRANCH_NAME }}
